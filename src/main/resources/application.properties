spring.application.name=backend-API

# Jwt configuration
jwt.secret-key=${JWT_SECRET_KEY}
# 4 hours in milliseconds
jwt.expiration-time=14400000

# AWS S3 Configuration
aws.s3.bucketName=${AWS_S3_BUCKET_NAME}
aws.s3.region=${AWS_REGION}

# ******* AWS Credentials (for development - BE CAREFUL IN PRODUCTION!) *********
# These are the Access Key ID and Secret Access Key for IAM user.
# Direct keys (convenient for local dev, NOT secure for production)
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}
# ******* REMOVE AND CHANGE THIS FOR PROD **********
# load properties from .env file
# ********** remove for prod **********
spring.config.import=optional:file:.env[.properties]

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD}

# MySQL Database Connection
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA/Hibernate Configuration
# 'validate' is a safety net, checks if @Entity definitions match the DB schema. Throws error if not.
spring.jpa.hibernate.ddl-auto=validate
# Logs SQL queries executed by JPA to the console
spring.jpa.show-sql=false
# Formats logged SQL for readability
spring.jpa.properties.hibernate.format_sql=true

# Flyway DB migration tool
spring.flyway.enabled=true
spring.flyway.url=${DB_URL}
spring.flyway.user=${DB_USERNAME}
spring.flyway.password=${DB_PASSWORD}
spring.flyway.locations=classpath:database/migration

# Spring Boot Multipart Configuration
spring.servlet.multipart.enabled=true
# Files smaller than this are kept in memory
spring.servlet.multipart.file-size-threshold=2KB
# Maximum size per file
spring.servlet.multipart.max-file-size=10MB
# Maximum size of the entire request (all parts combined), this seems wrong
spring.servlet.multipart.max-request-size=50MB
# Embedded Tomcat specific configurations for large POST requests
# This ensures Tomcat can buffer the entire POST body before handing it to Spring
# Max size of the HTTP POST content in bytes. -1 means unlimited.
server.tomcat.max-http-post-size=10MB
# Max size of POST body that will be swallowed by Tomcat if the request body is not consumed by the webapp. -1 means unlimited.
server.tomcat.max-swallow-size=10MB